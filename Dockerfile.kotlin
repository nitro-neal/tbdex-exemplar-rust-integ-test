# Use the official Gradle image to create a build artifact
FROM gradle:8.7-jdk21 AS build

# Set the working directory in the container
WORKDIR /app

# Copy the Kotlin project files into the container
COPY kotlin-service .

# Build the application
RUN gradle build --no-daemon

# Use OpenJDK for the final image
FROM openjdk:21-slim

# Set the working directory in the container
WORKDIR /app

# Copy the built artifact from the build stage
COPY --from=build /app/app/build/libs/*.jar app.jar

# Create a directory for shared files
RUN mkdir -p /app/shared

# Create a startup script
RUN echo '#!/bin/sh\n\
# Wait for the shared files to be available\n\
while [ ! -f /app/shared/issuerDid.txt ] || \n\
      [ ! -f /app/shared/pfiDid.txt ] || \n\
      [ ! -f /app/shared/signedCredential.txt ]; do\n\
  echo "Waiting for shared files..."\n\
  sleep 5\n\
done\n\
\n\
echo "Shared files are available. Starting the Kotlin service..."\n\
\n\
# Start the Kotlin application\n\
java -jar app.jar\n\
' > /app/startup.sh

# Make the startup script executable
RUN chmod +x /app/startup.sh

# Expose the port the app runs on
EXPOSE 8080

# Run the application
CMD ["/app/startup.sh"]